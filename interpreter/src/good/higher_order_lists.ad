fun1 x = x + 1;
fun2 = fun x -> 2 * x;
fun3 = fun y -> 3 - y;

use_me x f = f x;

list_equ list1 list2 = match (list1, list2) with {
   | ([], [])           -> True
   | (h1::t1, h2::t2)   -> if h1 = h2 then True else False
   | _                  -> False
   };

map f list = match list with {
  | []        -> []
  | h :: tail -> (f h) :: (map f tail)
  };

test_list_equ = list_equ [1,2,3] [1,2,3];


test_data = map (use_me 1) [fun1, fun2, fun3];

test = list_equ test_data [2, 2, 2];

main = test;
