Tree = adt {
	 | Node Int Tree Tree
	 | Empty
	 };

sum_tree : Tree -> Bool;
sum_tree tree = match tree with {
	 | Node value left right -> value + (sum_tree left) + (sum_tree right)
	 | Empty                 -> 0
	 };

x = node 5;

test_basic_match = match x with {
	 | Node value _ _ -> value = 5
	 | _              -> False
	 };

node : Int -> Tree;
node value = Node value Empty Empty;

test_sum_tree1 = sum_tree (Node 5 (Node 1 Empty (node 6)) (node 3)) = 15;

main = test_basic_match && test_sum_tree1;